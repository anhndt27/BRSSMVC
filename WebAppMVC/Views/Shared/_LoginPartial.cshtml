@using Microsoft.AspNetCore.Identity
@using WebAppMVC.Data.Entities

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="dropdown">
            <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                Hello @UserManager.GetUserName(User)!
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">User Profile!</a></li>
                <li class="">
                    <a class="dropdown-item" asp-area="" asp-controller="UserManager" asp-action="Index">List Manager</a>
                </li>
                <li><hr class="dropdown-divider"></li>
                <li class="dropdown-item">
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="nav-link btn btn-sm btn-link text-dark">Logout</button>
                    </form>
                </li>
            </ul>
        </div>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
